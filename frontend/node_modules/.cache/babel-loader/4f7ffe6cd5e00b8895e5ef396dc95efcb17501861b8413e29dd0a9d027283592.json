{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom'; // Импортируем необходимые компоненты\n\nexport function Hook() {\n  _s();\n  const navigate = useNavigate();\n  const [services, setServices] = useState([]); // Состояние для хранения списка сервисов\n  const [isServiceListVisible, setServiceListVisible] = useState(false);\n  const [isMainPageVisible, setMainPageVisible] = useState(true);\n\n  // Эффект для запроса данных из API\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/services/\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setServices(data);\n      } catch (error) {\n        console.error(\"Ошибка при получении данных: \", error);\n      }\n    };\n    fetchServices();\n  }, []);\n\n  // Обработчик для кнопки \"Услуги\"\n  const offAllComps = () => {\n    setServiceListVisible(false);\n    setMainPageVisible(false);\n  };\n  const handleServiceListClick = () => {\n    offAllComps();\n    setServiceListVisible(true);\n  };\n  const handleMainPageClick = () => {\n    offAllComps();\n    setMainPageVisible(true);\n  };\n  return {\n    services,\n    isServiceListVisible,\n    isMainPageVisible,\n    handleServiceListClick,\n    handleMainPageClick\n  };\n}\n_s(Hook, \"DlAUec1aErL74DJBTpJZojZS/SU=\", false, function () {\n  return [useNavigate];\n});\n_c = Hook;\nvar _c;\n$RefreshReg$(_c, \"Hook\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Hook","_s","navigate","services","setServices","isServiceListVisible","setServiceListVisible","isMainPageVisible","setMainPageVisible","fetchServices","response","fetch","ok","Error","data","json","error","console","offAllComps","handleServiceListClick","handleMainPageClick","_c","$RefreshReg$"],"sources":["D:/programming/Web Programming/ConnectProvider/frontend/src/Hook.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'; // Импортируем необходимые компоненты\r\n\r\nexport function Hook() {\r\n const navigate = useNavigate();\r\n  const [services, setServices] = useState([]); // Состояние для хранения списка сервисов\r\n  const [isServiceListVisible, setServiceListVisible] = useState(false);\r\n  const [isMainPageVisible, setMainPageVisible] = useState(true);\r\n\r\n  // Эффект для запроса данных из API\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:8000/api/services/\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const data = await response.json();\r\n        setServices(data);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при получении данных: \", error);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, []);\r\n\r\n  // Обработчик для кнопки \"Услуги\"\r\n  const offAllComps = () => {\r\n    setServiceListVisible(false);\r\n    setMainPageVisible(false);\r\n  };\r\n\r\n  const handleServiceListClick = () => {\r\n    offAllComps();\r\n    setServiceListVisible(true);\r\n  };\r\n\r\n  const handleMainPageClick = () => {\r\n    offAllComps();\r\n    setMainPageVisible(true);\r\n  };\r\n\r\n  return {\r\n    services,\r\n    isServiceListVisible,\r\n    isMainPageVisible,\r\n    handleServiceListClick,\r\n    handleMainPageClick,\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC7B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,oBAAoB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACU,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,WAAW,CAACU,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBZ,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMW,sBAAsB,GAAGA,CAAA,KAAM;IACnCD,WAAW,CAAC,CAAC;IACbZ,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;IAChCF,WAAW,CAAC,CAAC;IACbV,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,OAAO;IACLL,QAAQ;IACRE,oBAAoB;IACpBE,iBAAiB;IACjBY,sBAAsB;IACtBC;EACF,CAAC;AACH;AAACnB,EAAA,CA/CeD,IAAI;EAAA,QACFD,WAAW;AAAA;AAAAsB,EAAA,GADbrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}