{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nexport function Hook() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [services, setServices] = useState([]);\n  const [applications, setApplications] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [type, setType] = useState(\"\");\n\n  // Мемоизированная функция fetchData\n  const fetchData = useCallback(async () => {\n    if (!type) return; // Не выполняем запрос, если тип не установлен\n\n    let url = `http://127.0.0.1:8000/api/${type}`;\n    if (searchQuery !== \"\") {\n      url += `?name=${searchQuery}`;\n    }\n    console.log(url);\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (type === \"services/\") {\n        setServices(data);\n      } else if (type === \"applications/\") {\n        setApplications(data);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при получении данных:\", error);\n    }\n  }, [type, searchQuery]); // Зависимости\n\n  // Обработка изменения маршрута\n  useEffect(() => {\n    const newType = location.pathname.split('/')[1] + \"/\";\n    if (newType !== \"services/\") {\n      setSearchQuery(\"\");\n    }\n    if (newType !== type && (newType === \"services/\" || newType === \"applications/\")) {\n      setType(newType);\n    }\n  }, [location]);\n\n  // Единый эффект для загрузки данных\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Срабатывает только при изменении fetchData\n\n  const handleSearchClick = e => {\n    e.preventDefault();\n    const searchText = e.target.elements.q.value;\n    setSearchQuery(searchText);\n  };\n  const createApplication = async cartItems => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/applications/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: 'draft',\n          created_at: new Date().toISOString(),\n          creator: 1\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const applicationId = data.id;\n        for (let item of cartItems) {\n          await fetch(`http://127.0.0.1:8000/api/application-services/`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              application: applicationId,\n              service: item.id\n            })\n          });\n        }\n        return data;\n      } else {\n        console.error('Ошибка при создании заявки', data);\n        return null;\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке данных:', error);\n    }\n  };\n  return {\n    navigate,\n    location,\n    services,\n    applications,\n    searchQuery,\n    handleSearchClick,\n    createApplication\n  };\n}\n_s(Hook, \"ogm+PKoIs/JBI741KHdD4bsZK/o=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Hook;\nvar _c;\n$RefreshReg$(_c, \"Hook\");","map":{"version":3,"names":["useState","useEffect","useCallback","useNavigate","useLocation","Hook","_s","navigate","location","services","setServices","applications","setApplications","searchQuery","setSearchQuery","type","setType","fetchData","url","console","log","response","fetch","ok","Error","data","json","error","newType","pathname","split","handleSearchClick","e","preventDefault","searchText","target","elements","q","value","createApplication","cartItems","method","headers","body","JSON","stringify","status","created_at","Date","toISOString","creator","applicationId","id","item","application","service","_c","$RefreshReg$"],"sources":["D:/programming/Web Programming/ConnectProvider/frontend/src/Hook.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nexport function Hook() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [services, setServices] = useState([]);\r\n    const [applications, setApplications] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n\r\n    // Мемоизированная функция fetchData\r\n    const fetchData = useCallback(async () => {\r\n        if (!type) return; // Не выполняем запрос, если тип не установлен\r\n\r\n        let url = `http://127.0.0.1:8000/api/${type}`;\r\n        if (searchQuery !== \"\") {\r\n            url += `?name=${searchQuery}`;\r\n        }\r\n\r\n        console.log(url);\r\n\r\n        try {\r\n            const response = await fetch(url);\r\n            if (!response.ok) {\r\n                throw new Error(\"Network response was not ok\");\r\n            }\r\n            const data = await response.json();\r\n\r\n            if (type === \"services/\") {\r\n                setServices(data);\r\n            } else if (type === \"applications/\") {\r\n                setApplications(data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Ошибка при получении данных:\", error);\r\n        }\r\n    }, [type, searchQuery]); // Зависимости\r\n\r\n    // Обработка изменения маршрута\r\n    useEffect(() => {\r\n        const newType = location.pathname.split('/')[1] + \"/\";\r\n        \r\n        if (newType !== \"services/\") {\r\n            setSearchQuery(\"\");\r\n        }\r\n\r\n        if (newType !== type && (newType === \"services/\" || newType === \"applications/\")) {\r\n            setType(newType);\r\n        }\r\n    }, [location]);\r\n\r\n    // Единый эффект для загрузки данных\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]); // Срабатывает только при изменении fetchData\r\n\r\n    const handleSearchClick = (e) => {\r\n        e.preventDefault();\r\n        const searchText = e.target.elements.q.value;\r\n        setSearchQuery(searchText);\r\n    };\r\n\r\n    const createApplication = async (cartItems) => {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:8000/api/applications/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    status: 'draft',\r\n                    created_at: new Date().toISOString(),\r\n                    creator: 1\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                const applicationId = data.id;\r\n                \r\n                for (let item of cartItems) {\r\n                    await fetch(`http://127.0.0.1:8000/api/application-services/`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({\r\n                            application: applicationId,\r\n                            service: item.id,\r\n                        }),\r\n                    });\r\n                }\r\n\r\n                return data;\r\n            } else {\r\n                console.error('Ошибка при создании заявки', data);\r\n                return null;\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при отправке данных:', error);\r\n        }\r\n    };\r\n\r\n    return {\r\n        navigate,\r\n        location,\r\n        services,\r\n        applications,\r\n        searchQuery,\r\n        handleSearchClick,\r\n        createApplication,\r\n    };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}