{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nexport function Hook() {\n  _s();\n  const navigate = useNavigate();\n  const [services, setServices] = useState([]); // Состояние для хранения списка сервисов\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Состояние для поискового запроса\n\n  // Функция для выполнения запроса с фильтрацией по имени\n  const fetchServices = async () => {\n    let url = \"http://127.0.0.1:8000/api/services/?\";\n    if (searchQuery) {\n      url += `name=${searchQuery}&`; // Добавляем параметр поиска по имени\n    }\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setServices(data); // Обновляем список сервисов\n    } catch (error) {\n      console.error(\"Ошибка при получении данных: \", error);\n    }\n  };\n\n  // Эффект для запроса данных из API, который выполняется каждый раз, когда изменяется фильтр\n  useEffect(() => {\n    fetchServices();\n    console.log(\"Запрос: \", e.target.value);\n  }, [searchQuery]); // Перезапускаем запрос при изменении фильтра\n\n  // Обработчик изменения поискового запроса\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value); // Обновляем поисковый запрос\n  };\n  return {\n    navigate,\n    services,\n    searchQuery,\n    handleSearchChange\n  };\n}\n_s(Hook, \"PiZYASew4lZKQZcu03ptxeOSjGI=\", false, function () {\n  return [useNavigate];\n});\n_c = Hook;\nvar _c;\n$RefreshReg$(_c, \"Hook\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Hook","_s","navigate","services","setServices","searchQuery","setSearchQuery","fetchServices","url","response","fetch","ok","Error","data","json","error","console","log","e","target","value","handleSearchChange","_c","$RefreshReg$"],"sources":["D:/programming/Web Programming/ConnectProvider/frontend/src/Hook.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport function Hook() {\r\n  const navigate = useNavigate();\r\n  const [services, setServices] = useState([]); // Состояние для хранения списка сервисов\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Состояние для поискового запроса\r\n\r\n  // Функция для выполнения запроса с фильтрацией по имени\r\n  const fetchServices = async () => {\r\n    let url = \"http://127.0.0.1:8000/api/services/?\";\r\n    \r\n    if (searchQuery) {\r\n      url += `name=${searchQuery}&`; // Добавляем параметр поиска по имени\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const data = await response.json();\r\n      setServices(data); // Обновляем список сервисов\r\n    } catch (error) {\r\n      console.error(\"Ошибка при получении данных: \", error);\r\n    }\r\n  };\r\n\r\n  // Эффект для запроса данных из API, который выполняется каждый раз, когда изменяется фильтр\r\n  useEffect(() => {\r\n    fetchServices();\r\n    console.log(\"Запрос: \", e.target.value);\r\n  }, [searchQuery]); // Перезапускаем запрос при изменении фильтра\r\n\r\n  // Обработчик изменения поискового запроса\r\n  const handleSearchChange = (e) => {\r\n\r\n    setSearchQuery(e.target.value); // Обновляем поисковый запрос\r\n  };\r\n\r\n  return {\r\n    navigate,\r\n    services,\r\n    searchQuery,\r\n    handleSearchChange,\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIC,GAAG,GAAG,sCAAsC;IAEhD,IAAIH,WAAW,EAAE;MACfG,GAAG,IAAI,QAAQH,WAAW,GAAG,CAAC,CAAC;IACjC;IAEA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,WAAW,CAACS,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACdS,aAAa,CAAC,CAAC;IACfS,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzC,CAAC,EAAE,CAACf,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB;EACA,MAAMgB,kBAAkB,GAAIH,CAAC,IAAK;IAEhCZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,OAAO;IACLlB,QAAQ;IACRC,QAAQ;IACRE,WAAW;IACXgB;EACF,CAAC;AACH;AAACpB,EAAA,CA3CeD,IAAI;EAAA,QACDD,WAAW;AAAA;AAAAuB,EAAA,GADdtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}