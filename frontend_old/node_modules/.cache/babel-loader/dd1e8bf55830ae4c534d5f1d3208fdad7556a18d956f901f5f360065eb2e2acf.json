{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport function Hook() {\n  _s();\n  const [services, setServices] = useState([]); // Состояние для хранения списка сервисов\n  const [isServiceListVisible, setIsServiceListVisible] = useState(false);\n  const [isMainPageVisible, setIsMainPageVisible] = useState(false);\n\n  // Эффект для запроса данных из API\n  useEffect(() => {\n    const fetchServices = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/api/services/\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setServices(data);\n      } catch (error) {\n        console.error(\"Ошибка при получении данных: \", error);\n      }\n    };\n    fetchServices();\n  }, []);\n\n  // Обработчик для кнопки \"Услуги\"\n  const offAllComps = () => {\n    setIsServiceListVisible(false);\n    setIsMainPageVisible(false);\n  };\n  const handleServiceListClick = () => {\n    setIsMainPageVisible(true);\n  };\n  const handleMainPageClick = () => {\n    setIsMainPageVisible(true);\n  };\n  return {\n    services,\n    isServiceListVisible,\n    isMainPageVisible,\n    handleServiceListClick,\n    handleMainPageClick\n  };\n}\n_s(Hook, \"b2tyBiCPfs/PGCbOFDA4Owq7ENs=\");\n_c = Hook;\nvar _c;\n$RefreshReg$(_c, \"Hook\");","map":{"version":3,"names":["useState","useEffect","Hook","_s","services","setServices","isServiceListVisible","setIsServiceListVisible","isMainPageVisible","setIsMainPageVisible","fetchServices","response","fetch","ok","Error","data","json","error","console","offAllComps","handleServiceListClick","handleMainPageClick","_c","$RefreshReg$"],"sources":["D:/programming/Web Programming/ConnectProvider/frontend/src/Hook.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport function Hook() {\r\n  const [services, setServices] = useState([]); // Состояние для хранения списка сервисов\r\n  const [isServiceListVisible, setIsServiceListVisible] = useState(false);\r\n  const [isMainPageVisible, setIsMainPageVisible] = useState(false);\r\n\r\n  // Эффект для запроса данных из API\r\n  useEffect(() => {\r\n    const fetchServices = async () => {\r\n      try {\r\n        const response = await fetch(\"http://127.0.0.1:8000/api/services/\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const data = await response.json();\r\n        setServices(data);\r\n      } catch (error) {\r\n        console.error(\"Ошибка при получении данных: \", error);\r\n      }\r\n    };\r\n\r\n    fetchServices();\r\n  }, []);\r\n\r\n  // Обработчик для кнопки \"Услуги\"\r\n  const offAllComps = () => {\r\n    setIsServiceListVisible(false);\r\n    setIsMainPageVisible(false);\r\n  };\r\n\r\n  const handleServiceListClick = () => {\r\n    setIsMainPageVisible(true);\r\n  };\r\n\r\n  const handleMainPageClick = () => {\r\n    setIsMainPageVisible(true);\r\n  };\r\n\r\n  return {\r\n    services,\r\n    isServiceListVisible,\r\n    isMainPageVisible,\r\n    handleServiceListClick,\r\n    handleMainPageClick,\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACM,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,WAAW,CAACU,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBZ,uBAAuB,CAAC,KAAK,CAAC;IAC9BE,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMW,sBAAsB,GAAGA,CAAA,KAAM;IACnCX,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMY,mBAAmB,GAAGA,CAAA,KAAM;IAChCZ,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,OAAO;IACLL,QAAQ;IACRE,oBAAoB;IACpBE,iBAAiB;IACjBY,sBAAsB;IACtBC;EACF,CAAC;AACH;AAAClB,EAAA,CA5CeD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}